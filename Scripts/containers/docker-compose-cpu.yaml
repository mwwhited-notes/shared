services:
  azurite:
    extends:
      file: docker-compose.azurite.yaml
      service: azurite
    networks:
    - backend
    ports:
    - ${SERVER_PORT_AZURITE_BLOB}:10000
    - ${SERVER_PORT_AZURITE_QUEUE}:10001
    - ${SERVER_PORT_AZURITE_TABLE}:10002
    # restart: 'unless-stopped'

  keycloak:
    extends:
      file: docker-compose.keycloak.yaml
      service: keycloak
    networks:
    - frontend
    - backend 
    ports:
    - ${SERVER_PORT_KEYCLOAK}:8080
    # restart: 'unless-stopped'

  mongodb:
    extends:
      file: docker-compose.mongodb.yaml
      service: mongodb
    networks:
    - backend
    ports:
    - ${SERVER_PORT_MONGODB}:27017
    # restart: 'unless-stopped'

  rabbitmq:
    extends:
      file: docker-compose.rabbitmq.yaml
      service: rabbitmq
    networks:
    - backend
    ports:
    - ${SERVER_PORT_RABBITMQ}:5672
    - ${SERVER_PORT_RABBITMQ_TLS}:15672
    # restart: 'unless-stopped'

  smtp4dev:
    extends:
      file: docker-compose.smtp4dev.yaml
      service: smtp4dev
    networks:
    - frontend
    - backend
    ports:
    - ${SERVER_PORT_SMTP4DEV_HTTP}:80
    - ${SERVER_PORT_SMTP4DEV_SMTP}:25
    - ${SERVER_PORT_SMTP4DEV_IMAP}:143
    - ${SERVER_PORT_SMTP4DEV_POP3}:110
    # restart: 'unless-stopped'
      
  sbert:
    extends:
      file: docker-compose.sbert.yaml
      service: sbert
    deploy:
      # mode: replicated
      # replicas: 6
      resources:
        reservations:
          devices:
          - driver: nvidia
            count: 1
            capabilities: [gpu]
    networks:
    - backend
    ports:
    - ${SERVER_PORT_SBERT}:5080
    # restart: 'unless-stopped'
      
  qdrant:
    extends:
      file: docker-compose.qdrant.yaml
      service: qdrant
    networks:
    - backend
    ports:
    - ${SERVER_PORT_QDRANT_HTTP}:6333
    - ${SERVER_PORT_QDRANT_HTTPS}:6334
    # restart: 'unless-stopped'

  paradedb:
    extends:
      file: docker-compose.paradedb.yaml
      service: paradedb
    networks:
    - backend
    ports:
    - ${SERVER_PORT_PARADEDB}:5432 
    # restart: 'unless-stopped'

  pgadmin:
    extends:
      file: docker-compose.pgadmin.yaml
      service: pgadmin
    depends_on:
    - paradedb
    networks:
    - frontend
    - backend
    ports:
    - ${SERVER_PORT_PGADMIN_HTTP}:80
    # restart: 'unless-stopped'

  localstack:
    extends:
      file: docker-compose.localstack.yaml
      service: localstack
    networks:
    - backend
    ports:
    - ${SERVER_PORT_LOCALSTACK}:4566
    - ${SERVER_PORT_LOCALSTACK_RANGE}:4510-4559
    # restart: 'unless-stopped'

  opensearch:
    extends:
      file: docker-compose.opensearch.yaml
      service: opensearch
    networks:
    - backend
    ports:
    - ${SERVER_PORT_OPENSEARCH_HTTP}:9200
    - ${SERVER_PORT_OPENSEARCH_TRANSPORT}:9600
    # restart: 'unless-stopped'

  opensearch-dashboards:
    extends:
      file: docker-compose.opensearch-dashboards.yaml
      service: opensearch-dashboards
    networks:
    - frontend
    - backend
    ports: 
    - ${SERVER_PORT_OPENSEARCH_DASHBOARD}:5601
    # restart: 'unless-stopped'

  kafka:
    extends:
      file: docker-compose.kafka.yaml
      service: kafka
    networks:
    - backend
    ports: 
    - ${SERVER_PORT_KAFKA_LISTENER}:9092
    - ${SERVER_PORT_KAFKA_EXTERNAL}:9094
    # restart: 'unless-stopped'
      
  sql-server:
    extends:
      file: docker-compose.sql-server.yaml
      service: sql-server-2022
    networks:
    - backend
    ports:
    - ${SERVER_PORT_SQL_SERVER}:1433
    # restart: 'unless-stopped'

  # sql-sonarqube:
  #   extends:
  #     file: docker-compose.sonarqube.yaml
  #     service: sonarqube
  #   networks:
  #   - backend
  #   ports:
  #   - ${SERVER_PORT_SONARQUBE}:9000
  #   # restart: 'unless-stopped'

  apache-tika:
    extends:
      file: docker-compose.apache-tika.yaml
      service: apache-tika
    networks:
    - backend    
    ports:
    - ${SERVER_PORT_APACHE_TIKA}:9998
    # restart: 'unless-stopped'

  # label-studio:
  #   extends:
  #     file: docker-compose.label-studio.yaml
  #     service: label-studio
  #   networks:
  #   - backend
  #   ports:
  #   - ${SERVER_PORT_LABEL_STUDIO}:8080
  # #   restart: 'unless-stopped'

  # cvat-server:
  #   extends:
  #     file: docker-compose.cvat.yaml
  #     service: cvat-server
  #   networks:
  #   - backend
  #   ports:
  #   - ${SERVER_PORT_CVAT_SERVER}:8080
  #   restart: 'unless-stopped'
      
  # cvat-ui:
  #   extends:
  #     file: docker-compose.cvat.yaml
  #     service: cvat-ui
  #   networks:
  #   - backend
  #   ports:
  #   - ${SERVER_PORT_CVAT_UI}:80
  #   restart: 'unless-stopped'

  # gotenberg:
  #   extends:
  #     file: docker-compose.gotenberg.yaml
  #     service: gotenberg
  #   networks:
  #   - backend
  #   ports:
  #   - ${SERVER_PORT_GOTENBERG}:3000
  # #   restart: 'unless-stopped'

  # stirling-pdf:
  #   extends:
  #     file: docker-compose.stirling-pdf.yaml
  #     service: stirling-pdf
  #   networks:
  #   - backend
  #   ports:
  #   - ${SERVER_PORT_STIRLING_PDF}:8080
  # #   restart: 'unless-stopped'

  # jupyterlab:
  #   extends:
  #     file: docker-compose.jupyterlab.yaml
  #     service: jupyterlab
  #   networks:
  #   - backend
  #   ports:
  #   - ${SERVER_PORT_JUYPTERLAB}:8888
  # #   restart: 'unless-stopped'
  #   # deploy:
  #   #   resources:
  #   #     reservations:
  #   #       devices:
  #   #         - driver: nvidia
  #   #           count: 1
  #   #           capabilities: [gpu]

  ollama:
    extends:
      file: docker-compose.ollama.yaml
      service: ollama
    networks:
    - backend
    ports:
    - ${SERVER_PORT_OLLAMA}:11434
    # restart: 'unless-stopped'
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]

  searxng:
    extends:
      file: docker-compose.searxng.yaml
      service: searxng
    networks:
    - backend
    ports:
      - ${SERVER_PORT_SEARXNG}:8080
    # restart: 'unless-stopped'

  open-webui:
    extends:
      file: docker-compose.open-web-ui.yaml
      service: open-webui
    # environment:
    #   USE_CUDA_DOCKER: True
    depends_on:
    - ollama
    - searxng
    - apache-tika
    networks:
    - frontend
    - backend
    ports:
    - ${SERVER_PORT_OPEN_WEBUI}:8080
    # restart: 'unless-stopped'
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]

  n8n:
    extends:
      file: docker-compose.n8n.yaml
      service: n8n
    networks:
    - backend
    ports:
    - ${SERVER_PORT_N8N}:5678
    # restart: 'unless-stopped'  

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
    
volumes:
    mongodb-data:
    keycloak-data:
    smtp4dev-data:
    rabbitmq-data:
    azurite-data:
    qdrant-storage:
    qdrant-snapshots:
    opensearch-data:
    paradedb-data:
    kafka-data:
    sqlserver-data:
    # sonarqube-data:
    # sonarqube-extensions:
    # sonarqube-logs:
    # label-studio-data:
    # stirling-pdf-trainingData:
    # stirling-pdf-extraConfigs:
    # jupyterlab-working:
    # cvat-server-data:
    open-webui-docs:
    open-webui-data:
    ollama-models:
    n8n_data:
