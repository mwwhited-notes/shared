Address @type
	Unit Number : string
	Street : string
	City : string
	Postal Code : string
	State : string
	Country : string

Person @type
	Name : Name
	Addresses : Address[]
	Age : Age
	Email Address : Email

# https://en.wikipedia.org/wiki/Email_address#cite_note-11
# https://stackoverflow.com/questions/201323/how-to-validate-an-email-address-using-a-regular-expression
Email : string
	regex: /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])/

Name @type
	Prefix: string?
	First: string
	Middle: string?
	Last: string
	Suffix: string
	@Default(format) -> Name Formatter.Short

Name Formatter @map(name)
	Short -> join(' ', First, Last)
	Long -> join(' ', Prefix, First, Middle, Last, Suffix)
	Last First Short -> join(', ' join(' ', Last Suffix), First)
	Last First Long -> join(', ' join(' ', Last Suffix), join(' ', Prefix First Middle)

Age : int
	value: > 0
	value: < 120

Communication Client @interface
	SendTo
		> sender : person
		> receiver : person[]
		> subject : string
		> body : string
		< Result Code : Client Result Code
		< Result Message : string
		< Correlation Id : guid

Client Result Code @enum
	Unknown
	Pending
	Success
	Fail
